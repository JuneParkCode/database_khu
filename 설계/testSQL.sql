DROP TABLE IDENTITIES CASCADE CONSTRAINTS;
DROP TABLE CAMPUS CASCADE CONSTRAINTS;
DROP TABLE PROJECTS CASCADE CONSTRAINTS;
DROP TABLE DAILY_PEER_REVIEW CASCADE CONSTRAINTS;
DROP TABLE PEER_REVIEWS CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;
DROP VIEW USER_REVIEWS CASCADE CONSTRAINTS;
DROP VIEW USER_REVIEW_COUNT_BY_PROJECTS CASCADE CONSTRAINTS;


--- TABLE 정의
CREATE TABLE IDENTITIES
(
    IDENTITY_ID INT NOT NULL,
    IDENTITY_NAME CHAR(20) NOT NULL,
    CONSTRAINT IDENTITES_PK
        PRIMARY KEY (IDENTITY_ID),
    CONSTRAINT CK_POSITIVE_IDENTITY_ID
        CHECK (IDENTITY_ID >= 0)
);

CREATE TABLE CAMPUS
(
    CAMPUS_ID INT NOT NULL,
    CAMPUS_NAME CHAR(20) NOT NULL,
    CONSTRAINT CAMPUS_PK
        PRIMARY KEY (CAMPUS_ID),
    CONSTRAINT CK_POSITIVE_CAMPUS_ID
        CHECK (CAMPUS_ID >= 0)
);

CREATE TABLE USERS
(
    USER_ID INT NOT NULL,
    USER_REG_DATE DATE DEFAULT NULL,
    USER_DEL_DATE DATE DEFAULT NULL,
    USER_LOGIN_DATE DATE DEFAULT NULL,
    USER_IDENTITY INT NOT NULL,
    USER_CAMPUS_ID INT NOT NULL,
    CONSTRAINT USER_PK PRIMARY KEY (USER_ID),
    CONSTRAINT CK_POSITIVE_USER_ID CHECK (USER_ID >= 0),
    CONSTRAINT FK_COLUMN_1
        FOREIGN KEY (USER_IDENTITY)
        REFERENCES IDENTITIES(IDENTITY_ID)
        ON DELETE CASCADE,
    CONSTRAINT FK_COLUMN_2
        FOREIGN KEY (USER_CAMPUS_ID)
        REFERENCES CAMPUS(CAMPUS_ID)
        ON DELETE CASCADE
);

CREATE TABLE PROJECTS
(
    PROJECT_ID INT NOT NULL,
    PROJECT_NAME CHAR(30) NOT NULL,
    CONSTRAINT PROJECTS_PK
        PRIMARY KEY (PROJECT_ID),
    CONSTRAINT CK_POSITIVE_PROJECT_ID
        CHECK (PROJECT_ID >= 0)
);

CREATE TABLE DAILY_PEER_REVIEW
(
    DP_DATE DATE NOT NULL,
    USER_ID INT NOT NULL,
    PR_NUMBERS_PER_DAY INT NOT NULL,
    CONSTRAINT PK_DAILY
        PRIMARY KEY (DP_DATE, USER_ID),
    CONSTRAINT FK_DAILY
        FOREIGN KEY (USER_ID)
        REFERENCES USERS(USER_ID)
        ON DELETE CASCADE,
    CONSTRAINT CK_POSITIVE_DAY
        CHECK (PR_NUMBERS_PER_DAY >= 0)
);

CREATE TABLE PEER_REVIEWS
(
    PR_ID   INT NOT NULL,
    PR_RATE INT NOT NULL,
    PR_DATE DATE NOT NULL,
    PR_COMMENT CHAR(500) NOT NULL,
    PR_REVIEWER_ID  INT NOT NULL,
    PR_PROJECT_ID INT NOT NULL,
    PR_REVIEWEE_ID INT NOT NULL,
    CONSTRAINT PK_PEER_REVIEW
        PRIMARY KEY (PR_ID),
    CONSTRAINT FK_PROJECT_ID
        FOREIGN KEY (PR_PROJECT_ID)
        REFERENCES PROJECTS(PROJECT_ID)
        ON DELETE CASCADE,
    CONSTRAINT FK_REVIEWER
        FOREIGN KEY (PR_REVIEWER_ID)
        REFERENCES USERS(USER_ID)
        ON DELETE CASCADE, -- 간편하게 DROP 하려고 설정함 추후에 삭제
    CONSTRAINT FK_REVIEWEE
        FOREIGN KEY (PR_REVIEWEE_ID)
        REFERENCES USERS(USER_ID)
        ON DELETE CASCADE,
    CONSTRAINT CK_VALID_RANGE
        CHECK ((PR_RATE >= 0) AND (PR_RATE <= 5))
);

-- View 정의
--- CREATE VIEWS

-- USER_REVIEWS
CREATE VIEW USER_REVIEWS
AS
	SELECT
		U.USER_ID AS "USER_ID",
		PR.PR_ID AS "PR_ID",
		PR.PR_RATE AS "PR_RATE",
		PR.PR_DATE AS "PR_DATE",
		PR.PR_COMMENT AS "COMMENT",
		PR.PR_REVIEWER_ID AS "REVIEWER_ID",
		PR.PR_PROJECT_ID AS "PROJECT_ID",
		PR.PR_REVIEWEE_ID AS "REVIEWEE_ID"
	FROM
		USERS U, PEER_REVIEWS PR
	WHERE
		U.USER_ID = PR.PR_REVIEWER_ID
	WITH
	 	READ ONLY
;

-- USER REVIEW COUNT BY PROJECTS
CREATE VIEW USER_REVIEW_COUNT_BY_PROJECTS
AS
	SELECT
		USER_ID AS "USER_ID",
		PROJECT_ID AS "PROJECT_ID",
		COUNT(PROJECT_ID) AS "EVALUATE COUNT"
	FROM
		USER_REVIEWS
	GROUP BY
		USER_ID, PROJECT_ID
;

-- -- USER REVIEW COUNT WEEKLY
-- CREATE VIEW USER_REVIEW_COUNT_WEEKLY
-- AS
-- 	SELECT
-- 		USER_ID AS "USER_ID",
-- 		SUM(PR_NUMBERS_PER_DAY) AS "WEEEKLY SUM"
-- 	FROM
-- 		DAILY_PEER_REVIEW
-- 	GROUP BY
-- 		USER_ID
-- ;

-- -- USER REVIEW COUNT MONTHLY
-- CREATE VIEW USER_REVIEW_COUNT_MONTHLY
-- AS
-- 	SELECT
-- 		USER_ID AS "USER_ID",
-- 		SUM(PR_NUMBERS_PER_DAY) AS "WEEEKLY SUM"
-- 	FROM
-- 		DAILY_PEER_REVIEW
-- 	GROUP BY
-- 		USER_ID
-- ;

--- TEST INPUT

-- CAMPUS
INSERT INTO CAMPUS VALUES (0, 'SEOUL');
INSERT INTO CAMPUS VALUES (1, 'PARIS');
INSERT INTO CAMPUS VALUES (2, 'TOKYO');

-- IDENTITIES
INSERT INTO IDENTITIES VALUES (0, 'CADET');
INSERT INTO IDENTITIES VALUES (1, 'PICINER');
INSERT INTO IDENTITIES VALUES (2, 'STAFF');

-- USERS
INSERT INTO USERS
    (USER_ID, USER_IDENTITY, USER_CAMPUS_ID, USER_NAME)
    VALUES
    (0, 0, 0, 'sungjpar');

INSERT INTO USERS
    (USER_ID, USER_IDENTITY, USER_CAMPUS_ID, USER_NAME)
    VALUES
    (1, 0, 0, 'mingylee');

INSERT INTO USERS
    (USER_ID, USER_IDENTITY, USER_CAMPUS_ID, USER_NAME)
    VALUES
    (2, 0, 0, 'tykim');

INSERT INTO USERS
    (USER_ID, USER_IDENTITY, USER_CAMPUS_ID, USER_NAME)
    VALUES
    (3, 0, 1, 'sbpark');

INSERT INTO USERS
    (USER_ID, USER_IDENTITY, USER_CAMPUS_ID, USER_NAME)
    VALUES
    (4, 0, 1, 'mslee');

-- PROJECTS
INSERT INTO PROJECTS
    (PROJECT_ID, PROJECT_NAME)
    VALUES
    (0, 'libft');
INSERT INTO PROJECTS
    (PROJECT_ID, PROJECT_NAME)
    VALUES
    (1, 'ft_printf');
INSERT INTO PROJECTS
    (PROJECT_ID, PROJECT_NAME)
    VALUES
    (2, 'get_next_line');
INSERT INTO PROJECTS
    (PROJECT_ID, PROJECT_NAME)
    VALUES
    (3, 'born2beroot');
INSERT INTO PROJECTS
    (PROJECT_ID, PROJECT_NAME)
    VALUES
    (4, 'push_swap');


-- PEER_REVIEWS
INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (0, 5.0, DATE '2022-02-02', 'GOOD', 1, 0, 3);
INSERT INTO DAILY_PEER_REVIEW
    (DP_DATE, USER_ID, PR_NUMBERS_PER_DAY)
    VALUES
    (DATE '2022-02-02', 1, 1);

INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (1, 5.0, DATE '2022-02-02', 'BAD', 2, 1, 1);
INSERT INTO DAILY_PEER_REVIEW
    (DP_DATE, USER_ID, PR_NUMBERS_PER_DAY)
    VALUES
    (DATE '2022-02-02', 2, 1);

INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (2, 5.0, DATE '2022-02-02', 'SOSO', 3, 2, 1);
INSERT INTO DAILY_PEER_REVIEW
    (DP_DATE, USER_ID, PR_NUMBERS_PER_DAY)
    VALUES
    (DATE '2022-02-02', 3, 1);

INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (3, 5.0, DATE '2022-02-02', '??', 2, 3, 1);
UPDATE DAILY_PEER_REVIEW
SET PR_NUMBERS_PER_DAY = PR_NUMBERS_PER_DAY + 1
WHERE USER_ID = 2;


INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (4, 5.0, DATE '2022-02-02', 'OUTSTANDING', 1, 0, 2);
UPDATE DAILY_PEER_REVIEW
SET PR_NUMBERS_PER_DAY = PR_NUMBERS_PER_DAY + 1
WHERE USER_ID = 1;

INSERT INTO PEER_REVIEWS
    (PR_ID, PR_RATE, PR_DATE, PR_COMMENT, PR_REVIEWER_ID, PR_PROJECT_ID, PR_REVIEWEE_ID)
    VALUES
    (5, 5.0, DATE '2022-02-03', 'GOOD!!', 3, 2, 1);
INSERT INTO DAILY_PEER_REVIEW
    (DP_DATE, USER_ID, PR_NUMBERS_PER_DAY)
    VALUES
    (DATE '2022-02-03', 3, 1);

SELECT * FROM CAMPUS;
SELECT * FROM IDENTITIES;
SELECT * FROM PROJECTS;
SELECT * FROM USERS;
SELECT * FROM PEER_REVIEWS;
SELECT * FROM USER_REVIEWS;
SELECT * FROM USER_REVIEW_COUNT_BY_PROJECTS;
SELECT * FROM DAILY_PEER_REVIEW;
